#!/bin/bash -e

# This file is part of QtContacts tracker storage plugin
#
# Copyright (c) 2010-2011 Nokia Corporation and/or its subsidiary(-ies).
#
# Contact:  Nokia Corporation (info@qt.nokia.com)
#
# GNU Lesser General Public License Usage
# This file may be used under the terms of the GNU Lesser General Public License
# version 2.1 as published by the Free Software Foundation and appearing in the
# file LICENSE.LGPL included in the packaging of this file.  Please review the
# following information to ensure the GNU Lesser General Public License version
# 2.1 requirements will be met:
# http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
#
# In addition, as a special exception, Nokia gives you certain additional rights.
# These rights are described in the Nokia Qt LGPL Exception version 1.1, included
# in the file LGPL_EXCEPTION.txt in this package.
#
# Other Usage
# Alternatively, this file may be used in accordance with the terms and
# conditions contained in a signed written agreement between you and Nokia.

# Initial settings
###################################################################################################

package="libqtcontacts-tracker"
version="unknown version"

topsourcedir=`dirname "$0"`/..
topsourcedir=`cd "$topsourcedir" && pwd`
topbuilddir="$topsourcedir"
bindir=/usr/bin

pre_steps='tracker-control -rs'
timeouts=5:30:180
enable_local=no
launcher=
environ=

shopt -s extglob

# Parse command line options
###################################################################################################

while true
do
    case "$1" in
        -l|-local)
            enable_local=yes
            shift ;;
        -m|-memcheck)
            environ="G_DEBUG=gc-friendly G_SLICE=always-malloc"
            launcher="valgrind --tool=memcheck --leak-check=full --num-callers=50 --suppressions=$topsourcedir/$package.supp "
            shift ;;
        -v|-version)
            version=$2
            shift 2 ;;
        -p|-package)
            package=$2
            shift 2 ;;
        -s|-srcdir)
            topsourcedir=$2
            shift 2 ;;
        -b|-builddir)
            topbuilddir=$2
            shift 2 ;;
        -t|-timeouts)
            timeouts=$2
            shift 2 ;;
        -*)
            echo "$0: Unknown option: $1" >&2
            exit 2 ;;
        *)
            break ;;
    esac
done

timeout_fast=${timeouts/:*/}
timeouts=${timeouts/#+([0-9]):/}
timeout_slow=${timeouts/:*/}
timeouts=${timeouts/#+([0-9]):/}
timeout_glacial=${timeouts/:*/}

# Check if rpaths are enabled, otherwise patch LD_LIBRARY_PATH
###################################################################################################

rpath_enabled=`grep ENABLE_BUILDDIRS_RPATH "$topbuilddir/.qmake.cache" | sed -e 's,^.*quote(\([a-z]*\)).*$,\1,'`

if ! test "$rpath_enabled" = "yes"
then
    export LD_LIBRARY_PATH=${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$topbuilddir/src/lib
fi

# Generate test definition file
###################################################################################################

cat <<EOF
<!-- generated by $0 on `date` - DO NOT EDIT -->

<testdefinition version="0.1">
  <suite name="${package}-tests" timeout="${timeout_fast}">
    <description>Unit and regression tests for ${package} ${version}</description>
EOF

for subdir in "$@"
do
    suite=`basename "$subdir"`
    test -f "$topsourcedir/tests/$subdir/$suite.skip" && continue

    if test "$enable_local" = "yes"
    then
        bindir="$topbuilddir/tests/$suite"
    else
        pre_steps="su -l user -c '$pre_steps'"
        bindir="/usr/bin"
    fi

cat <<EOF
    <set name="$suite">
      <pre_steps>
        <step>$pre_steps</step>
      </pre_steps>

EOF

    "$topbuilddir/tests/$subdir/$suite" -functions | sed -ne 's/()$//p' | while read test
    do
        attributes="name=\"$test\""
        description=`sed -ne "s|^$suite::$test: ||p" $topsourcedir/EXPECTFAIL || true`

        if test -n "$description"
        then
            attributes="$attributes insignificant=\"true\""
        else
            description="no description available yet"
        fi

        step="${environ}${environ:+ }${launcher}${bindir}/${suite} -maxwarnings 0 ${test}"

        if test "$enable_local" != "yes"
        then
            step="su -l user -c '$step'"
        fi

        category=`sed -ne "s/^$suite::$test:\s*\(\<\w\+\>\).*/\1/p" $topsourcedir/tests/timeouts`

        case "$category" in
        slow) attributes="$attributes timeout=\"$timeout_slow\"";;
        glacial) attributes="$attributes timeout=\"$timeout_glacial\"";;
        esac

        cat <<EOF
      <case $attributes>
        <description>$description</description>
        <step>$step</step>
      </case>
EOF
    done

    cat <<EOF
      <environments>
        <scratchbox>true</scratchbox>
        <hardware>true</hardware>
      </environments>
    </set>
EOF

done

cat <<EOF
  </suite>
</testdefinition>
EOF
